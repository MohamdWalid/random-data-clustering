# -*- coding: utf-8 -*-
"""k-means.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rtZqPqxWfYiov4z9jmpAWsWJPplBFOsL
"""

# This Python 3 environment comes with many helpful analytics libraries installed
# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python
# For example, here's several helpful packages to load

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import matplotlib.pyplot as plt

x1 = np.array([151, 884, 828, 590, 907, 659, 629, 593, 347, 21, 255, 964, 471, 901, 448, 604, 233, 932, 576, 872, 756, 579, 83, 766, 407, 188, 2, 644, 359, 42, 192, 606, 269, 843, 330, 367, 138, 148, 907, 636, 912, 209, 400, 416, 757, 25, 303, 900, 747, 916, 532, 741, 900, 758, 489, 902, 866, 346, 342, 147, 245, 181, 630, 895, 615, 403, 400, 519, 277, 490, 133, 445, 786, 957, 916, 313, 695, 3, 951, 129, 85, 499, 82, 221, 3, 389, 751, 4, 208, 447, 900, 525, 510, 951, 591, 18, 719, 199, 376, 626, 951, 490, 785, 218, 902, 676, 875, 447, 284, 905, 717, 10, 1, 148, 88, 844, 691, 136, 157, 758, 650, 759, 869, 522, 111, 591, 437, 730, 88, 221, 637, 825, 821, 6, 415, 256, 788, 604, 673, 449, 609, 873, 176, 626, 488, 460, 814, 797, 962, 10, 266, 623, 605, 488, 465, 153, 721, 43, 122, 799, 718, 666, 610, 242, 432, 333, 288, 995, 800, 332, 817, 156, 119, 827, 876, 275, 426, 518, 83, 856, 329, 56, 347, 963, 456, 89, 624, 741, 428, 589, 863, 632, 647, 942, 609, 27, 142, 699, 323, 243, 647, 233, 500, 283, 142, 755, 110, 915, 954, 410, 532, 400, 168, 935, 198, 36, 768, 301, 259, 657, 199, 475, 661, 508, 28, 448, 305, 265, 407, 396, 937, 387, 840, 867, 554, 13, 385, 67, 375, 526, 799, 840, 82, 578, 186, 464, 123, 654, 449, 198, 30, 689, 686, 755, 862, 214, 603, 607, 910, 454, 450, 283, 358, 133, 76, 921, 576, 938, 132, 679, 838, 888, 567, 629, 839, 754, 86, 709, 366, 153, 654, 59, 140, 931, 993, 377, 565, 5, 329, 184, 185, 337, 32, 137, 157, 375, 968, 843, 401, 436, 142, 483, 856, 768, 506, 354, 933, 679, 233, 169, 762, 355, 766, 869, 329, 547, 674, 649, 9, 286, 425, 322, 123, 35, 480, 28, 620, 76, 422, 455, 567, 706, 224, 296, 233, 734, 950, 39, 586, 339, 544, 370, 509, 687, 475, 436, 291, 236, 603, 804, 513, 75, 364, 115, 805, 921, 786, 40, 365, 356, 857, 44, 185, 41, 978, 191, 416, 979, 409, 274, 837, 767, 508, 129, 144, 24, 921, 122, 341, 183, 374, 483, 518, 863, 78, 793, 981, 542, 395, 47, 721, 991, 136, 47, 991, 963, 257, 812, 629, 417, 93, 727, 88, 387, 736, 861, 717, 105, 446, 132, 637, 433, 52, 707, 92, 884, 516, 810, 833, 985, 576, 911, 811, 817, 896, 860, 375, 786, 59, 607, 679, 658, 637, 898, 344, 54, 843, 372, 1, 597, 527, 594, 859, 31, 909, 149, 509, 823, 119, 730, 186, 954, 511, 302, 126, 559, 986, 28, 554, 444, 278, 629, 433, 375, 471, 314, 952, 930, 59, 657, 269, 149, 65, 576, 359, 843, 672, 841, 662, 769, 783, 821, 522, 950, 612, 236, 368, 105, 890, 836, 113, 610, 178, 553, 328, 341, 341, 178, 436, 230, 160, 881, 950, 704, 536, 986, 19, 518, 376, 894, 540, 301, 309, 448, 322, 661, 172, 582, 771, 977, 115, 794, 929, 9, 650, 558, 702, 995, 870, 432, 622, 925, 742, 934, 511, 596, 255, 327, 269, 192, 900, 8, 501, 175, 193, 675, 810, 734, 296, 411, 267, 424, 369, 627, 216, 104, 377, 487, 337, 277, 151, 637, 810, 495, 342, 775, 553, 192, 663, 134, 690, 613, 7, 249, 908, 216, 137, 470, 750, 565, 275, 904, 727, 898, 880, 438, 197, 941, 227, 518, 832, 446, 532, 677, 980, 732, 220, 653, 716, 917, 184, 239, 993, 529, 321, 552, 98, 142, 775, 941, 402, 990, 835, 99, 571, 552, 744, 773, 138, 471, 809, 210, 369, 435, 569, 733, 393, 64, 609, 845, 445, 132, 665, 673, 197, 76, 66, 3, 366, 519, 189, 390, 43, 505, 503, 806, 703, 924, 56, 8, 90, 697, 913, 841, 519, 276, 513, 772, 956, 973, 717, 343, 736, 268, 813, 97, 243, 367, 609, 685, 826, 62, 233, 351, 932, 413, 399, 975, 778, 793, 943, 519, 980, 472, 322, 881, 842, 374, 334, 829, 630, 779, 662, 399, 356, 730, 61, 720, 459, 571, 492, 948, 890, 414, 82, 220, 21, 734, 865, 365, 155, 541, 891, 694, 199, 76, 298, 439, 447, 565, 904, 768, 115, 315, 762, 561, 401, 893, 216, 139, 925, 359, 363, 934, 37, 944, 693, 68, 732, 403, 395, 200, 328, 4, 417, 248, 840, 27, 958, 26, 962, 137, 353, 632, 841, 983, 944, 885, 65, 481, 494, 789, 7, 422, 398, 377, 59, 781, 673, 668, 380, 370, 50, 499, 147, 641, 888, 105, 261, 526, 577, 252, 756, 717, 651, 940, 511, 254, 350, 921, 590, 54, 817, 28, 884, 217, 701, 263, 664, 512, 417, 553, 845, 425, 286, 672, 617, 263, 575, 134, 174, 438, 585, 268, 434, 252, 420, 551, 324, 739, 570, 236, 996, 420, 968, 561, 115, 512, 520, 578, 502, 584, 696, 291, 866, 368, 433, 291, 821, 577, 893, 189, 147, 937, 739, 101, 348, 485, 866, 538, 337, 683, 988, 219, 458, 370, 942, 688, 438, 161, 867, 68, 214, 485, 602, 37, 50, 586, 197, 336, 967, 335, 536, 258, 140, 280, 164, 734, 646, 787, 706, 824, 496, 412, 373, 117, 157, 53, 152, 492, 6, 584, 388, 717, 694, 105, 464, 284, 481, 442, 971, 139, 837, 220, 784, 802, 877, 889, 49, 98, 789, 228, 371, 195, 296, 227, 102, 590, 574, 833, 810, 559, 868, 508, 130, 151, 604, 152, 654, 276, 206, 434, 730, 688, 756, 169, 236, 579, 966, 517, 454, 674, 47, 474, 237, 682, 3, 914, 242, 623, 594, 312, 304, 379, 966, 623, 179, 402, 71, 734, 943, 743, 90, 93, 889, 764, 570, 941, 479, 443, 238, 813, 219, 151, 818, 794, 985, 221, 522, 287, 410, 185, 984, 482, 672, 776, 10, 88, 687, 262, 604, 539, 582, 980, 370, 304, 253, 42, 24, 373]).reshape(-1,1)
x2 = np.array([59, 688, 843, 276, 967, 560, 330, 703, 873, 52, 753, 943, 391, 206, 485, 792, 958, 352, 336, 198, 227, 409, 472, 675, 651, 656, 787, 243, 462, 629, 754, 475, 857, 218, 911, 694, 135, 429, 666, 183, 750, 741, 512, 870, 432, 579, 781, 375, 132, 19, 222, 263, 443, 848, 311, 110, 895, 782, 107, 43, 299, 420, 92, 172, 695, 844, 254, 662, 514, 156, 6, 611, 258, 904, 257, 778, 868, 48, 677, 699, 402, 375, 807, 113, 595, 157, 479, 425, 141, 862, 325, 906, 791, 623, 541, 789, 32, 91, 614, 409, 296, 183, 279, 457, 844, 757, 775, 662, 699, 32, 480, 549, 723, 751, 35, 408, 254, 450, 900, 754, 508, 465, 246, 22, 437, 788, 358, 486, 813, 33, 351, 284, 199, 818, 660, 767, 462, 902, 971, 246, 484, 636, 590, 286, 121, 109, 869, 524, 700, 30, 395, 72, 64, 0, 982, 802, 388, 848, 443, 4, 421, 440, 281, 888, 41, 494, 647, 363, 727, 354, 932, 416, 301, 587, 220, 775, 352, 924, 940, 381, 356, 982, 680, 37, 475, 877, 165, 910, 826, 630, 930, 145, 590, 531, 649, 837, 444, 559, 659, 785, 705, 298, 759, 254, 558, 94, 36, 617, 308, 682, 239, 14, 454, 919, 685, 367, 1, 615, 779, 142, 503, 417, 187, 261, 533, 41, 754, 780, 896, 617, 113, 304, 662, 674, 648, 820, 597, 327, 885, 506, 30, 657, 738, 87, 52, 888, 419, 185, 394, 98, 944, 518, 686, 986, 526, 240, 117, 528, 336, 852, 467, 366, 334, 946, 401, 949, 760, 758, 635, 172, 948, 150, 873, 143, 521, 94, 478, 330, 431, 635, 379, 207, 532, 904, 221, 819, 666, 240, 30, 953, 975, 2, 649, 625, 460, 687, 366, 971, 836, 392, 239, 562, 776, 424, 680, 382, 574, 251, 502, 550, 831, 202, 458, 596, 475, 219, 155, 380, 785, 836, 907, 459, 400, 604, 648, 348, 743, 74, 58, 753, 8, 287, 34, 178, 226, 124, 8, 255, 533, 207, 263, 670, 214, 375, 912, 258, 313, 690, 881, 355, 906, 282, 141, 598, 638, 782, 209, 50, 872, 918, 862, 214, 81, 144, 931, 67, 929, 397, 93, 647, 928, 598, 820, 538, 343, 874, 123, 569, 189, 316, 616, 373, 33, 125, 259, 143, 3, 612, 823, 918, 944, 740, 79, 181, 331, 554, 412, 439, 503, 489, 142, 519, 524, 401, 515, 746, 622, 906, 53, 592, 943, 623, 946, 313, 547, 215, 851, 296, 460, 155, 143, 641, 561, 334, 69, 678, 346, 216, 824, 155, 218, 339, 744, 794, 682, 761, 648, 24, 354, 128, 41, 683, 981, 381, 140, 726, 171, 909, 68, 230, 745, 1, 767, 971, 931, 481, 31, 179, 369, 603, 284, 251, 808, 261, 538, 574, 416, 758, 264, 754, 684, 495, 550, 813, 259, 994, 694, 1, 109, 854, 52, 797, 394, 240, 469, 291, 835, 83, 800, 602, 657, 272, 32, 948, 65, 636, 605, 729, 109, 211, 978, 108, 412, 260, 307, 901, 323, 507, 130, 437, 880, 668, 281, 614, 941, 126, 852, 610, 964, 152, 590, 121, 300, 345, 480, 880, 705, 327, 627, 880, 679, 191, 724, 337, 547, 768, 985, 902, 332, 921, 264, 606, 671, 809, 554, 163, 605, 249, 657, 148, 63, 108, 325, 309, 251, 766, 534, 841, 126, 908, 898, 604, 918, 898, 128, 282, 964, 159, 742, 464, 564, 933, 586, 959, 237, 331, 763, 710, 975, 361, 859, 604, 889, 753, 608, 766, 183, 409, 878, 220, 5, 108, 545, 609, 41, 869, 608, 789, 206, 730, 684, 114, 254, 895, 880, 208, 948, 343, 34, 137, 301, 866, 166, 341, 808, 161, 526, 306, 864, 204, 795, 305, 678, 269, 823, 358, 30, 287, 690, 828, 773, 18, 815, 517, 984, 73, 565, 45, 69, 867, 537, 389, 503, 166, 534, 432, 648, 161, 740, 801, 75, 166, 98, 75, 874, 74, 832, 544, 583, 847, 894, 325, 599, 888, 373, 238, 761, 333, 891, 594, 117, 136, 144, 920, 349, 591, 177, 67, 899, 276, 706, 427, 101, 638, 824, 109, 418, 358, 834, 499, 584, 504, 272, 461, 883, 291, 792, 307, 952, 344, 26, 287, 934, 202, 689, 158, 340, 660, 763, 368, 558, 827, 427, 191, 174, 52, 66, 76, 868, 932, 98, 459, 540, 943, 196, 842, 586, 342, 520, 820, 217, 930, 369, 686, 441, 453, 623, 455, 400, 489, 946, 204, 443, 496, 894, 267, 738, 479, 288, 906, 597, 245, 533, 624, 916, 787, 519, 345, 933, 78, 52, 872, 695, 56, 843, 784, 91, 422, 928, 564, 194, 680, 19, 430, 83, 880, 435, 359, 173, 503, 45, 90, 354, 827, 303, 281, 162, 11, 127, 82, 723, 888, 282, 11, 18, 47, 526, 270, 802, 512, 455, 673, 133, 208, 231, 905, 449, 316, 333, 575, 601, 770, 547, 859, 932, 674, 937, 628, 65, 460, 417, 185, 263, 293, 279, 851, 68, 7, 897, 631, 533, 743, 266, 138, 59, 329, 998, 996, 199, 198, 737, 704, 563, 46, 191, 950, 144, 172, 128, 468, 470, 384, 990, 477, 712, 107, 714, 249, 762, 244, 710, 429, 798, 700, 153, 314, 987, 786, 795, 52, 873, 450, 301, 642, 525, 561, 811, 179, 39, 15, 249, 160, 947, 284, 769, 588, 639, 208, 707, 384, 530, 252, 338, 218, 571, 575, 3, 9, 601, 1, 257, 365, 497, 447, 204, 692, 333, 894, 866, 600, 966, 678, 832, 169, 905, 811, 116, 800, 765, 33, 481, 968, 42, 238, 565, 602, 581, 980, 583, 925, 883, 327, 933, 693, 410, 786, 948, 989, 833, 494, 320, 429, 240, 672, 533, 143, 912, 549, 350, 76, 118, 845, 984, 901, 145, 730, 286, 304, 486, 278, 602, 304, 250, 352, 618, 549, 277, 501, 89, 379, 557, 801, 460, 715, 386, 567, 785, 328, 288, 856, 770, 933, 691, 487, 298, 722, 555, 476, 735, 192, 62, 480, 203, 18, 946, 541, 817, 438, 956, 857]).reshape(-1,1)

print(x1);print(x2)

y = np.zeros((1000,1))
print(y)

plt.scatter(x1,x2,c='r')
plt.show()

k = 2
intial_point1 = np.array([400,1000])
intial_point2 = np.array([600,1000])

data = np.concatenate([x1,x2,y] , axis = 1) 
print(data)

plt.scatter(x1,x2,c='r')
plt.scatter(intial_point1[0],intial_point1[1],c='b')
plt.scatter(intial_point2[0],intial_point2[1],c='b')
plt.show()

data = pd.DataFrame(data)
data.columns = ['x1','x2','y']
print(data)

iterations = 15
for i in range(0,iterations):
    distance1 = np.power(np.power(x1 - intial_point1[0],2) + np.power(x2 - intial_point1[1],2) , 0.5)
    distance2 = np.power(np.power(x1 - intial_point2[0],2) + np.power(x2 - intial_point2[1],2),0.5)
    data['distance1'] = distance1
    data['distance2'] = distance2
    data['y'].loc[data.distance1 < data.distance2] = 1
    data['y'].loc[data.distance1 > data.distance2] = 2
    intial_point1 = np.array([np.mean(data['x1'].loc[data.y == 1]),np.mean(data['x2'].loc[data.y == 1])])
    intial_point2 = np.array([np.mean(data['x1'].loc[data.y == 2]),np.mean(data['x2'].loc[data.y == 2])])
    plt.scatter(data['x1'].loc[data.y == 1],data['x2'].loc[data.y == 1],c='r')
    plt.scatter(data['x1'].loc[data.y == 2],data['x2'].loc[data.y == 2],c='b')
    plt.scatter(intial_point1[0],intial_point1[1],c='green')
    plt.scatter(intial_point2[0],intial_point2[1],c='black')
    plt.show()